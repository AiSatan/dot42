//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dot42.Gui.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dot42.Gui.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open Getting started URL because: {0}.
        /// </summary>
        internal static string CannotOpenGettingStartedBecauseX {
            get {
                return ResourceManager.GetString("CannotOpenGettingStartedBecauseX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open URL because: {0}.
        /// </summary>
        internal static string CannotOpenUrlBecauseX {
            get {
                return ResourceManager.GetString("CannotOpenUrlBecauseX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to {0}.
        /// </summary>
        internal static string ConnectingToX {
            get {
                return ResourceManager.GetString("ConnectingToX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open samples folder because: {0}..
        /// </summary>
        internal static string FailedToOpenSamplesFolderBecauseX {
            get {
                return ResourceManager.GetString("FailedToOpenSamplesFolderBecauseX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open URL because: {0}..
        /// </summary>
        internal static string FailedToOpenUrlBecauseX {
            get {
                return ResourceManager.GetString("FailedToOpenUrlBecauseX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manufacturer of my device is not listed here.
        /// </summary>
        internal static string ManufacturerNotListed {
            get {
                return ResourceManager.GetString("ManufacturerNotListed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install &lt;a href=&quot;{0}&quot;&gt;Samsung Kies&lt;/a&gt;. This will install the needed USB driver. Once installed, you can connect your device using the USB cable..
        /// </summary>
        internal static string SamsungKiesInfoAtX {
            get {
                return ResourceManager.GetString("SamsungKiesInfoAtX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A support request could not be send. Please try again later..
        /// </summary>
        internal static string SupportRequestFailed {
            get {
                return ResourceManager.GetString("SupportRequestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A support request has been send. You&apos;ll be contacted as soon as possible..
        /// </summary>
        internal static string SupportRequestSend {
            get {
                return ResourceManager.GetString("SupportRequestSend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;Info&gt;
        ///  &lt;Manufacturer name=&quot;Acer&quot;&gt;
        ///    Go to the &lt;a href=&quot;http://www.acer.com/worldwide/support/mobile.html&quot;&gt;Acer Mobile download site&lt;/a&gt; and download the USB driver for your device.
        ///    Once you&apos;ve installed the driver, you can connect your device using the USB cable.
        ///  &lt;/Manufacturer&gt;  
        ///  &lt;Manufacturer name=&quot;Alcatel One Touch&quot;&gt;
        ///    Go to the &lt;a href=&quot;http://www.alcatelonetouch.com/global-en/support/faq/usbdriver.html&quot;&gt;Alcatel One Touch site&lt;/a&gt; and
        ///	click  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UsbDriverInfo {
            get {
                return ResourceManager.GetString("UsbDriverInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not possible to connect your device over a WIFI connection..
        /// </summary>
        internal static string WifiConnectionNotPossible {
            get {
                return ResourceManager.GetString("WifiConnectionNotPossible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click on Connect to connect your device over a WIFI connection..
        /// </summary>
        internal static string WifiConnectionPossible {
            get {
                return ResourceManager.GetString("WifiConnectionPossible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To connect to your device over a WIFI connection, install &lt;a href=&quot;{1}&quot;&gt;{0}&lt;/a&gt; on your device..
        /// </summary>
        internal static string WifiConnectionPossibleInstallAppXUsingUrlY {
            get {
                return ResourceManager.GetString("WifiConnectionPossibleInstallAppXUsingUrlY", resourceCulture);
            }
        }
    }
}
