namespace Dot42.DebuggerLib.Events.Jdwp
{
    /// <summary>
    /// Notification of a new running thread in the target VM. The new thread can be the result of a call to java.lang.Thread.start or the result of 
    /// attaching a new thread to the VM though JNI. The notification is generated by the new thread some time before its execution starts. 
    /// Because of this timing, it is possible to receive other events for the thread before this event is received. (Notably, Method Entry 
    /// Events and Method Exit Events might occur during thread initialization. It is also possible for the VirtualMachine AllThreads command 
    /// to return a thread before its thread start event is received.
    /// Note that this event gives no information about the creation of the thread object which may have happened much earlier, depending on the VM being debugged.  
    /// </summary>
    public sealed class ThreadStart : BaseEvent
    {
        public ThreadStart(JdwpPacket.DataReaderWriter reader)
            : base(reader)
        {
        }

        /// <summary>
        /// Accept a visit by the given visitor.
        /// </summary>
        public override TResult Accept<TResult, TData>(EventVisitor<TResult, TData> visitor, TData data)
        {
            return visitor.Visit(this, data);
        }
    }
}
